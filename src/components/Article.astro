---
import ArticleBlockquote from "./ArticleBlockquote.astro";
import ArticleFootnote from "./ArticleFootnote.astro";
import Prose from "./Prose.astro";

import {Content as PrefaceContent} from '../data/preface.md';
import {Content as TextContent} from '../data/text.mdx';

---

<article id="wymieranie-internetu" class="container w-full max-w-screen-md lg:max-w-screen-xl mx-auto font-serif py-8 lg:py-16 px-4 relative scroll-mt-[76px]">
    <div class="grid gap-8 lg:gap-32">
        <div>
            <Prose extraClass="font-sans opacity-70 text-sm lg:text-base uppercase mb-8 lg:mb-32">
                <PrefaceContent/>
            </Prose>
            <Prose id="text">
                <TextContent components={{blockquote: ArticleBlockquote, sup: ArticleFootnote }}/>
            </Prose>
        </div>
    </div>
</article>

<script>
    import tippy, {inlinePositioning} from 'tippy.js';

    document.addEventListener("DOMContentLoaded", function() {
        document.querySelectorAll('#text > p').forEach((element) => {
            if (element) {
                element.innerHTML = element.innerHTML.replaceAll(
                    /(\s)([a-ząćęłńóśźż]+)(o)([a-ząćęłńóśźż]+[\w.])/gu,
                    "$1<span class='text-nowrap'>$2<span class='relative' data-text-extinction><span data-text-extinction-victim>$3</span><span class='select-none absolute text-transparent bg-extinct-light dark:bg-extinct-dark left-0 -top-0.5 bg-no-repeat bg-contain bg-center' data-text-extinction-zombie>$3</span>$4</span></span>"
                );
            }
        });

        document.querySelectorAll('[data-footnote-ref]').forEach((footnoteElement) => {
            let footnoteId = footnoteElement.getAttribute('href');
            if (footnoteId === null) {
                return;
            }

            footnoteElement.addEventListener("click", function (event) {
                event.preventDefault()
            });

            let footnoteContent = document.getElementById(footnoteId.slice(1));
            if (footnoteContent === null) {
                return;
            }

            let footnotePopoverContent = document.createElement('div');
            let footnotePopoverContentInner = document.createElement('div');
            footnotePopoverContentInner.innerHTML = footnoteContent.innerHTML;
            footnotePopoverContentInner.className = 'prose bg-light dark:bg-dark font-sans prose dark:prose-invert text-black/70 dark:text-white/70 text-base lg:text-lg rounded-md border border-dark/70 dark:border-light/70 py-3.5 px-5';
            footnotePopoverContent.innerHTML = footnotePopoverContentInner.outerHTML;

            let footnotePopoverContentBackReference = footnotePopoverContent.querySelector('a[data-footnote-backref]');
            if (footnotePopoverContentBackReference !== null) {
                footnotePopoverContentBackReference.remove();
            }

            tippy('#' + footnoteElement.id, {
                allowHTML: true,
                arrow: false,
                content: footnotePopoverContent.innerHTML,
                placement: 'auto-start',
                inlinePositioning: true,
                plugins: [inlinePositioning],
                trigger: 'click',
                interactive: true,
                appendTo: () => document.body
            });
        });

        const observer = new IntersectionObserver(
            ((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        let victim = entry.target.querySelector('[data-text-extinction-victim]');
                        if(victim) {
                            victim.classList.add('animate-fade-out');
                        }

                        let zombie = entry.target.querySelector('[data-text-extinction-zombie]');
                        if(zombie) {
                            zombie.classList.add('animate-fade-in');
                        }

                        return;
                    }

                    let victim = entry.target.querySelector('[data-text-extinction-victim]');
                    if(victim) {
                        victim.classList.remove('animate-fade-out');
                    }

                    let zombie = entry.target.querySelector('[data-text-extinction-zombie]');
                    if(zombie) {
                        zombie.classList.remove('animate-fade-in');
                    }
                });
            }),
            {
                rootMargin: '0px',
                threshold: 0.5
            }
        );

        document.querySelectorAll('[data-text-extinction]').forEach((element) => {
            if (element) {
                observer.observe(element);
            }
        });
    });
</script>
