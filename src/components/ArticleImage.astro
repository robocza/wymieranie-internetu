---
import {Image} from 'astro:assets';
import SimpleLink from "../components/SimpleLink.astro";

import type {ImageMetadata} from 'astro';

interface Props {
    image: ImageMetadata;
    alt: string,
    source?: string,
    translation?: string,
}

const {
    image,
    alt,
    source,
    translation= await Astro.slots.render('translation'),
} = Astro.props;

---

<span class="relative not-prose my-4 flex flex-col items-center lg:items-end lg:absolute lg:w-80 lg:right-0 lg:my-0 lg:-mt-8">
    <span class="relative">
        <span class:list={[
            'relative block',
            'peer/image',
            { 'hover:blur hover:opacity-60': translation },
        ]}>
            <span class="absolute inset-0 shadow-image shadow-light dark:shadow-dark z-20"></span>
            <Image src={image}
                   alt={alt}
                   class="relative z-10 max-w-80 grayscale"
            />
        </span>
        {
            source && (
                <span class="mx-2 text-right text-xs block peer-hover/image:invisible">
                    <SimpleLink
                        text="źródło"
                        url={source}
                        className="inline-block h-4 font-sans text-xs font-normal text-black dark:text-white opacity-70 underline underline-offset-4 hover:opacity-90 pl-5 bg-left bg-no-repeat bg-[length:14px_14px] relative bg-chain"
                    />
                </span>
            )
        }
        {
            translation && (
                <span class="font-sans absolute left-0 top-0 text-base z-10 p-5 pointer-events-none invisible peer-hover/image:visible">
                    <fragment set:html={translation} />
                </span>
            )
        }
    </span>
</span>
